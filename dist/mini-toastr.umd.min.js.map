{"version":3,"file":"mini-toastr.umd.min.js","sources":["../src/common.const.ts","../src/MessageType.ts","../src/MessageClass.ts","../src/mini-toastr-error.class.ts","../src/StyleClass.ts","../src/mini-toastr.ts"],"sourcesContent":["export const LIB_NAME: string = 'mini-toastr'\nexport const DEFAULT_TIMEOUT: number = 3000\nexport const EMPTY_STRING: string = ''","export type MessageType = 'error' | 'warn' | 'success' | 'info'\n\nexport const ERROR: MessageType = 'error'\nexport const WARN: MessageType = 'warn'\nexport const SUCCESS: MessageType = 'success'\nexport const INFO: MessageType = 'info'","import { ERROR, INFO, SUCCESS, WARN } from './MessageType'\n\n// TODO (S.Panfilov) hardcode\nexport declare type MessageClass = '-error' | '-warn' | '-success' | '-info'\n\n// TODO (S.Panfilov) casting\nexport const ERROR_CLASS: MessageClass = `-${ERROR}` as MessageClass\nexport const WARN_CLASS: MessageClass = `-${WARN}`as MessageClass\nexport const SUCCESS_CLASS: MessageClass = `-${SUCCESS}`as MessageClass\nexport const INFO_CLASS: MessageClass = `-${INFO}`as MessageClass","export class MiniToastrError extends Error {\n  constructor (message: string) {\n    super(message)\n    this.message = message\n    this.name = 'MiniToastrError'\n  }\n}\n","import { LIB_NAME } from './common.const'\n\nconst NOTIFICATION = 'notification'\n\n// TODO (S.Panfilov) hardcode\nexport type StyleClass = 'mini-toastr'\n  | 'mini-toastr__notification'\n  | 'mini-toastr-notification__title'\n  | 'mini-toastr-notification__icon'\n  | 'mini-toastr-notification__message'\n\n// TODO (S.Panfilov) casting\nexport const CONTAINER_CLASS: StyleClass = LIB_NAME as StyleClass\nexport const NOTIFICATION_CLASS: StyleClass = `${LIB_NAME}__${NOTIFICATION}` as StyleClass\nexport const TITLE_CLASS: StyleClass = `${LIB_NAME}-${NOTIFICATION}__title` as StyleClass\nexport const ICON_CLASS: StyleClass = `${LIB_NAME}-${NOTIFICATION}__icon` as StyleClass\nexport const MESSAGE_CLASS: StyleClass = `${LIB_NAME}-${NOTIFICATION}__message` as StyleClass","import { Config, FullConfig, Styles } from './Config'\nimport { MiniToastr } from './MiniToastr'\nimport { DEFAULT_TIMEOUT, EMPTY_STRING, LIB_NAME } from './common.const'\nimport { ERROR_CLASS, INFO_CLASS, MessageClass, SUCCESS_CLASS, WARN_CLASS } from './MessageClass'\nimport { ERROR, INFO, MessageType, SUCCESS, WARN } from './MessageType'\nimport { MiniToastrError } from './mini-toastr-error.class'\nimport { CONTAINER_CLASS, ICON_CLASS, MESSAGE_CLASS, NOTIFICATION_CLASS, TITLE_CLASS } from './StyleClass'\n\nfunction fadeOut (element: HTMLElement, cb?: Function): void {\n  let opacity: number = element.style.opacity ? +element.style.opacity : 0.9\n\n  if (opacity > 0.05) {\n    opacity -= 0.05\n  } else if (opacity <= 0.1) {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element)\n      if (cb) cb()\n    }\n  } else {\n    opacity = 0.9\n  }\n\n  element.style.opacity = opacity.toString()\n  // setTimeout(() => fadeOut.apply((<any>this), [element, cb]), 1000 / 30) // TODO (S.Panfilov) wtf is this here?\n}\n\nfunction flatten (obj: any = {}, into: any = {}, prefix: string = EMPTY_STRING): Object { // TODO (S.Panfilov) \"into\" and \"obj\" are any\n  for (const k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      const prop = obj[k]\n      if (prop && typeof prop === 'object' && !(prop instanceof Date || prop instanceof RegExp)) {\n        flatten(prop, into, prefix + k + ' ')\n      } else {\n        if (into[prefix] && typeof into[prefix] === 'object') {\n          into[prefix][k] = prop\n        } else {\n          into[prefix] = {}\n          into[prefix][k] = prop\n        }\n      }\n    }\n  }\n\n  return into\n}\n\nfunction makeCss (styles: Styles): string {\n  const flat = flatten(styles)\n  let str = JSON.stringify(flat, null, 2)\n  str = str.replace(/\"([^\"]*)\": {/g, '$1 {')\n    .replace(/\"([^\"]*)\"/g, '$1')\n    .replace(/(\\w*-?\\w*): ([\\w\\d .#]*),?/g, '$1: $2;')\n    .replace(/},/g, '}\\n')\n    .replace(/ &([.:])/g, '$1')\n\n  str = str.substr(1, str.lastIndexOf('}') - 1)\n\n  return str\n}\n\nfunction isStyleSheet (element: Node | CSSImportRule): element is CSSImportRule {\n  return !!(<any>element).styleSheet\n}\n\nfunction appendStyles (css: string): void {\n  const head = document.head || document.getElementsByTagName('head')[0]\n  const styleElem = makeNode('style') as HTMLStyleElement // TODO (S.Panfilov) casting to HTMLStyleElement\n  styleElem.id = `${LIB_NAME}-styles`\n  styleElem.type = 'text/css'\n\n  if (isStyleSheet(styleElem)) {\n    styleElem.styleSheet.cssText = css // TODO (S.Panfilov) deprecated\n  } else {\n    styleElem.appendChild(document.createTextNode(css))\n  }\n\n  head.appendChild(styleElem)\n}\n\nconst config: FullConfig = {\n  types: { ERROR, WARN, SUCCESS, INFO },\n  animation: fadeOut,\n  timeout: DEFAULT_TIMEOUT,\n  icons: {},\n  appendTarget: document.body,\n  node: makeNode(),\n  allowHtml: false,\n  style: {\n    [`.${CONTAINER_CLASS}`]: {\n      position: 'fixed',\n      'z-index': 99999,\n      right: '12px',\n      top: '12px'\n    },\n    [`.${NOTIFICATION_CLASS}`]: {\n      cursor: 'pointer',\n      padding: '12px 18px',\n      margin: '0 0 6px 0',\n      'background-color': '#000',\n      opacity: 0.8,\n      color: '#fff',\n      'border-radius': '3px',\n      'box-shadow': '#3c3b3b 0 0 12px',\n      width: '300px',\n      [`&.${ ERROR_CLASS}`]: {\n        'background-color': '#D5122B'\n      },\n      [`&.${ WARN_CLASS}`]: {\n        'background-color': '#F5AA1E'\n      },\n      [`&.${ SUCCESS_CLASS}`]: {\n        'background-color': '#7AC13E'\n      },\n      [`&.${ INFO_CLASS}`]: {\n        'background-color': '#4196E1'\n      },\n      '&:hover': {\n        opacity: 1,\n        'box-shadow': '#000 0 0 12px'\n      }\n    },\n    [`.${TITLE_CLASS}`]: {\n      'font-weight': '500'\n    },\n    [`.${MESSAGE_CLASS}`]: {\n      display: 'inline-block',\n      'vertical-align': 'middle',\n      width: '240px',\n      padding: '0 12px'\n    }\n  }\n}\n\nfunction makeNode (type: string = 'div'): HTMLElement {\n  return document.createElement(type)\n}\n\nfunction createIcon (node: HTMLElement, type: MessageType, config: FullConfig): void {\n  const iconNode = makeNode(config.icons[type].nodeType)\n  const attrs = config.icons[type].attrs\n\n  for (const k in attrs) {\n    if (attrs.hasOwnProperty(k)) {\n      iconNode.setAttribute(k, attrs[k])\n    }\n  }\n\n  node.appendChild(iconNode)\n}\n\nfunction addElem (node: HTMLElement, text: string, className: string, config: FullConfig): void {\n  const elem = makeNode()\n  elem.className = className\n  if (config.allowHtml) {\n    elem.innerHTML = text\n  } else {\n    elem.appendChild(document.createTextNode(text))\n  }\n  node.appendChild(elem)\n}\n\nfunction getTypeClass (type: MessageType): MessageClass {\n  if (type === SUCCESS) return SUCCESS_CLASS\n  if (type === WARN) return WARN_CLASS\n  if (type === ERROR) return ERROR_CLASS\n  if (type === INFO) return INFO_CLASS\n\n  throw new MiniToastrError('Unknown class type. Check mini-toastr\\'s config\\s style section\"')\n}\n\nconst miniToastr: MiniToastr = {\n  config,\n  isInitialised: false,\n  showMessage (message: string, title: string, type: MessageType, timeout: number, cb: Function, overrideConf: Config): MiniToastr {\n    const config = { ...this.config, ...overrideConf } as FullConfig // TODO (S.Panfilov) \"Config\" casting\n\n    const notificationElem = makeNode()\n    notificationElem.className = `${NOTIFICATION_CLASS} ${getTypeClass(type)}`\n    notificationElem.onclick = () => config.animation(notificationElem)\n\n    if (title) addElem(notificationElem, title, TITLE_CLASS, config)\n    if (config.icons[type]) createIcon(notificationElem, type, config)\n    if (message) addElem(notificationElem, message, MESSAGE_CLASS, config)\n\n    config.node.insertBefore(notificationElem, config.node.firstChild)\n    setTimeout(() => config.animation(notificationElem, cb), timeout || config.timeout\n    )\n\n    if (cb) cb()\n    return this\n  },\n  init (aConfig: Config): MiniToastr {\n    this.config = { ...config, ...aConfig } as FullConfig // TODO (S.Panfilov) \"config\" is a kinda global scope and \"Config\" casting\n\n    const cssStr = makeCss(this.config.style)\n    appendStyles(cssStr)\n\n    this.config.node.id = CONTAINER_CLASS\n    this.config.node.className = CONTAINER_CLASS\n    this.config.appendTarget.appendChild(this.config.node)\n\n    // Object.keys(this.config.types).forEach(v => {\n    //     this[this.config.types[v]] = function (message: string, title: string, timeout: number, cb: Function, config: Config) {\n    //       this.showMessage(message, title, this.config.types[v], timeout, cb, config)\n    //       return this\n    //     }.bind(this) // TODO (S.Panfilov) bind?\n    //   }\n    // )\n\n    // TODO (S.Panfilov) check if it's working\n    Object.keys(miniToastr.config.types).forEach(v => {\n        miniToastr[miniToastr.config.types[v]] = function (message: string, title: string, timeout: number, cb: Function, config: Config) {\n          miniToastr.showMessage(message, title, miniToastr.config.types[v], timeout, cb, config)\n          return miniToastr\n        }.bind(this) // TODO (S.Panfilov) bind?\n      }\n    )\n\n    this.isInitialised = true\n\n    return this\n  },\n  setIcon (type: string, nodeType: string = 'i', attrs: any = []): MiniToastr { // TODO (S.Panfilov) attrs is any\n    attrs.class = attrs.class ? attrs.class + ' ' + ICON_CLASS : ICON_CLASS\n\n    this.config.icons[type] = { nodeType, attrs }\n\n    return this\n  }\n}\n\nexport default miniToastr"],"names":["LIB_NAME","EMPTY_STRING","ERROR","WARN","SUCCESS","INFO","ERROR_CLASS","WARN_CLASS","SUCCESS_CLASS","INFO_CLASS","message","_super","_this","name","tslib_1.__extends","Error","CONTAINER_CLASS","NOTIFICATION_CLASS","TITLE_CLASS","ICON_CLASS","MESSAGE_CLASS","styles","flat","obj","into","prefix","k","hasOwnProperty","prop","Date","RegExp","flatten","str","JSON","stringify","replace","substr","lastIndexOf","config","types","animation","element","cb","opacity","style","parentNode","removeChild","toString","timeout","icons","appendTarget","document","body","node","makeNode","allowHtml","_a","position","z-index","right","top","cursor","padding","margin","background-color","color","border-radius","box-shadow","width","_b","font-weight","display","vertical-align","type","createElement","text","className","elem","innerHTML","appendChild","createTextNode","miniToastr","isInitialised","showMessage","title","overrideConf","tslib_1.__assign","this","notificationElem","MiniToastrError","getTypeClass","onclick","addElem","iconNode","nodeType","attrs","setAttribute","createIcon","insertBefore","firstChild","setTimeout","init","aConfig","css","head","styleElem","cssStr","makeCss","getElementsByTagName","id","styleSheet","cssText","Object","keys","forEach","v","bind","setIcon","class"],"mappings":"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"}